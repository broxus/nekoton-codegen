const RESERVED_WORDS: &[&str] = &[
    "abstract",
    "alignof",
    "as",
    "become",
    "box",
    "break",
    "const",
    "continue",
    "crate",
    "do",
    "else",
    "enum",
    "extern crate",
    "extern",
    "false",
    "final",
    "fn",
    "for",
    "for",
    "if let",
    "if",
    "if",
    "impl",
    "impl",
    "in",
    "let",
    "loop",
    "macro",
    "match",
    "mod",
    "move",
    "mut",
    "offsetof",
    "override",
    "priv",
    "proc",
    "pub",
    "pure",
    "ref",
    "return",
    "Self",
    "self",
    "sizeof",
    "static",
    "struct",
    "super",
    "trait",
    "true",
    "type",
    "typeof",
    "unsafe",
    "unsized",
    "use",
    "use",
    "virtual",
    "where",
    "while",
    "yield",
];

const KNOWN_REPLACEMENTS: &[(&str, &str)] = &[("type", "ty")];

pub fn process_field(name: &str) -> String {
    if RESERVED_WORDS.binary_search(&name).is_ok() {
        match KNOWN_REPLACEMENTS.binary_search_by_key(&name, |&(a, _)| a) {
            Ok(index) => KNOWN_REPLACEMENTS[index].1.to_string(),
            Err(_) => format!("_{}", name),
        }
    } else {
        name.to_string()
    }
}
